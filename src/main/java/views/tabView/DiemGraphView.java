/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package views.tabView;

import entities.ThiSinh;
import java.awt.Dimension;
import java.util.function.Predicate;
import javax.swing.GroupLayout;
import org.jfree.chart.*;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.statistics.SimpleHistogramBin;
import org.jfree.data.statistics.SimpleHistogramDataset;
import utilities.others.Others;
import utilities.ui.Ui;

public class DiemGraphView extends javax.swing.JPanel {
    int code;
    Predicate<ThiSinh> func;
    Predicate<ThiSinh> subject;

    double gap = .5;

    /**
     * Creates new form DiemGraphView
     *
     * @param diem
     */
    public DiemGraphView(String diem) {
        String mon = diem.toLowerCase();
        func = i -> true;
        for (int i = 0; i < Others.MON.length; ++i) {
            if (!Others.MON[i].equals(mon)) continue;
            code = i;
            break;
        }
        switch (code) {
            case 3, 4, 5 -> subject = i -> i.getToHop().getID().equals("KHTN");
            case 6, 7, 8 -> subject = i -> i.getToHop().getID().equals("KHXH");
            default -> subject = i -> true;
        }
        initComponents();

    }

    public void setFunc(Predicate<ThiSinh> func) {
        if (func == null) func = i -> true;
        else this.func = func;
        if (isVisible()) resetState();
    }

    void resetState() {
        SimpleHistogramDataset data = new SimpleHistogramDataset("");
        for (double i = 0; i < 10; i += gap) {
            SimpleHistogramBin bin = new SimpleHistogramBin((double) i, (double) i + gap, true, (i + gap) == 10);

            final double x = i;
            int count = ThiSinh.getDB().COUNT(j -> {
                double diem = j.getDiem(Others.MAMON[code]);
                return x <= diem && diem <= (x + gap) && func.test(j) && subject.test(j);
            });
            bin.setItemCount(count);
            data.addBin(bin);
        }
        JFreeChart histogram = ChartFactory.createHistogram(
                "Biểu đồ thống kê điểm thí sinh môn " + Others.MON[code],
                "Thang điểm",
                "Số thí sinh",
                data,
                PlotOrientation.VERTICAL,
                true, true, true
        );

        Ui.displayGraph(this, new ChartPanel(histogram));
    }

    @Override
    public void setVisible(boolean aFlag) {
        super.setVisible(aFlag); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/OverriddenMethodBody
        if (!aFlag) return;
        resetState();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setPreferredSize(new Dimension(950, 680));

        GroupLayout layout = new GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGap(0, 870, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGap(0, 570, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
